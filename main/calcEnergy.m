function energy = calcEnergy(trac,E,brdx,brdy,varargin)
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% energy = calcEnergy(trac,E,brdx,brdy,cutoff,buffer)
%
% Description:
%   calculate the strain energy from traction vectors that are above a
%   specified percentile cutoff; displacements are recalcuated based on
%   stress above the cutoff before calculating the energy
%
% Input:
%   trac: traction stress field
%   E: Young's modulus
%   brdx,brdy: x and y coordinates of the cell border
%   cutoff (optional): the cutoff percentile, e.g. 95 means energy
%     generated by the top 5% of the traction stress, default = 0
%   buffer (optional): buffer zone around the cell, default = 0
%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

%% parse input
warning('off','all');
buffer = 0;
cutoff = 0;
if nargin == 5
    cutoff = varargin{1};
elseif nargin == 6
    cutoff = varargin{1};
    buffer = varargin{2};
end

pgn = polyshape(brdx,brdy);
if buffer>0
    pgn = polybuffer(pgn,buffer);
end
[ydim,xdim,~] = size(trac);
[Y,X] = meshgrid(1:xdim,1:ydim);
interior = isinterior(pgn,X(:),Y(:));
interior = reshape(interior,ydim,xdim);

tracX = trac(:,:,1);
tracX = tracX.*interior;
tracY = trac(:,:,2);
tracY = tracY.*interior;

if cutoff>0
    tracMag = sqrt(tracX.^2+tracY.^2);
    threshold = prctile(tracMag(interior),cutoff);
    tracX(tracMag<threshold)=0;
    tracY(tracMag<threshold)=0;  
    trac(:,:,1)=tracX;
    trac(:,:,2)=tracY;
end

dspl = calcDspl(trac,E,brdx,brdy);
dsplX = dspl(:,:,1).*interior;
dsplY = dspl(:,:,2).*interior;

energy = sum(tracX.*dsplX+tracY.*dsplY,'all');
end
